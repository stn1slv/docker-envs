version: '3.8'

services:
    mongo:
        image: mongo:4.4.6
        user: mongodb
        container_name: microcks-db
        ports:
            - 27017:27017

    microcks-sso:
        image: jboss/keycloak:14.0.0
        container_name: microcks-sso
        ports:
        - "18080:8080"
        environment:
            DB_VENDOR: "h2"
            KEYCLOAK_USER: "admin"
            KEYCLOAK_PASSWORD: "admin"
            KEYCLOAK_IMPORT: "/tmp/microcks-realm.json"
            KEYCLOAK_FRONTEND_URL: "http://localhost:18080/auth"
        volumes: 
        - "./microcks/keycloak-realm/microcks-realm-sample.json:/tmp/microcks-realm.json"

    postman:
        image: quay.io/microcks/microcks-postman-runtime:latest
        container_name: microcks-postman-runtime

    microcks:
        depends_on:
        - mongo
        - microcks-sso
        - postman
        image: quay.io/microcks/microcks:1.7.1
        container_name: microcks
        ports:
        - "8080:8080"
        - "9090:9090"
        environment:
        - SPRING_PROFILES_ACTIVE=prod
        - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
        - SPRING_DATA_MONGODB_DATABASE=microcks
        - POSTMAN_RUNNER_URL=http://postman:3000
        - TEST_CALLBACK_URL=http://microcks:8080
        - SERVICES_UPDATE_INTERVAL=0 0 0/2 * * *
        - KEYCLOAK_URL=http://microcks-sso:8080/auth
        - KEYCLOAK_PUBLIC_URL=http://localhost:18080/auth
        - ASYNC_MINION_URL=http://microcks-async-minion:8081
        - KAFKA_BOOTSTRAP_SERVER=kafka:19092
        #- MAX_UPLOAD_FILE_SIZE=3MB
        volumes:
        - "./microcks/config:/deployments/config"

    async-minion:
        depends_on:
        - microcks
        ports:
        - "8081:8081"
        image: quay.io/microcks/microcks-async-minion:1.7.1
        container_name: microcks-async-minion
        restart: on-failure
        volumes:
        - "./microcks/config:/deployments/config"
        environment:
        - QUARKUS_PROFILE=docker-compose
    
    zookeeper:
        image: quay.io/strimzi/kafka:0.30.0-kafka-3.1.0
        container_name: microcks-zookeeper
        command: [
          "sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
        - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs

    kafka:
        depends_on:
        - zookeeper
        image: quay.io/strimzi/kafka:0.30.0-kafka-3.1.0
        container_name: microcks-kafka
        command: [
         "sh", "-c",
            "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        ports:
        - "9092:9092"
        - "19092:19092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,EXTERNAL://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
